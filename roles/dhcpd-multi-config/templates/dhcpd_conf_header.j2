{{ ansible_managed | comment }}
# {{ git_repo.url }}
# admin {{ git_repo.admin }} bus {{ git_repo.bus }}

failover peer "failover-dhcp" {
  {{ INV_VAR_HOST_STATUS }} # This defines the master or slave
  address {{ ansible_ssh_host }}; 
  port {{ DHCP_PEER_PORT }}; ##for data exchange between hosts
  peer address {{ INV_VAR_SECONDARY_HOST }};
  peer port {{ DHCP_PEER_PORT }}; ##for data exchange between hosts
  max-response-delay 60;
  max-unacked-updates 10;
  {{ INV_VAR_MCLT }} #MCLT is declared on MASTER
  {{ INV_VAR_HOST_LOAD_BALANCE_SPLIT }} # split is declared on MASTER. 128 is balanced; use 255 if primary is 100% responsible until failure
  {{ INV_VAR_HOST_LOAD_BALANCE }} #load balance is declared on MASTER
}

authoritative;
default-lease-time {{ DHCP_LEASE_TIME_DEFAULT }};
max-lease-time {{ DHCP_LEASE_TIME_MAX }};

allow booting;
allow bootp;

update-static-leases on;
one-lease-per-client on;

#ddns-update-style interim;
## We generated the rndc-key when setting up DNS servers
#key "rndc-key" {
#  algorithm hmac-md5;
#  secret "T0+1uWvaiKLkhWutTNhsGvLw7m4CXbjHr+3CrDwQP5ZMNHeRSvghg2XxQvT3uGVwNle9oMvBEcjB+4GEPDK1Qg==";
#};


## We created zones when setting up DNS servers
#zone 200.168.192.in-addr.arpa {
#  primary 10.11.1.2;
#  key "rndc-key";  
#}
#zone hl.local {
#  primary 192.168.19.53;
#  key "rndc-key";
#}


{% for i in range(Network.group|length) %}
{% set outer_loop_index = loop.index0 %}
{% for j in range(Network.group[outer_loop_index].subnets|length) %}
{% if Network.group[outer_loop_index].subnets[loop.index0].active %}include "{{ DHCP_SUBNET_CONF_PATH }}/{{ Network.group[outer_loop_index].subnets[loop.index0].name }}.conf";
{% endif %}
{% endfor %}
{% endfor %}
